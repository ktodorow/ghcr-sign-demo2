name: Build, Push, and Sign Docker Image with Keyless Cosign

on:
  push:
    branches:
      - master

jobs:
  build-and-sign:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-app:latest .

      - name: Push Docker Image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository }}/my-app:latest

      - name: Install Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/download/v2.4.1/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Get Private Key
        run: |
          echo "${{ secrets.COSIGN_KEY }}" > cosign.key 
          
      - name: Sign Docker Image with Cosign
        env:
          COSIGN_EXPERIMENTAL: "true"
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          cosign sign --key cosign.key ghcr.io/${{ github.repository }}/my-app:latest
          
      - name: Remove Cosign Key File
        run: |
          shred -u cosign.key

      - name: Final Cleanup of Background Processes
        run: |
          # Stop all running containers
          docker ps -q | xargs -r docker stop
          # Prune any dangling containers, images, networks, etc.
          docker system prune -f --volumes
          # Kill any background jobs
          kill $(jobs -p) || true
